services:
  mysql:
    image: mariadb:11.8
    logging:
      driver: none
    command: ["--max-allowed-packet=512M"]
    volumes:
      - "./data/db:/var/lib/mysql:delegated"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    networks:
      - default
  litespeed:
    image: litespeedtech/openlitespeed:${OLS_VERSION}-${PHP_VERSION}
    container_name: litespeed
    env_file:
      - .env
    volumes:
      - ./lsws/conf:/usr/local/lsws/conf
      - ./lsws/admin-conf:/usr/local/lsws/admin/conf
      - ./sites:/var/www/vhosts/
      - ./acme:/root/.acme.sh/
      - ./logs:/usr/local/lsws/logs/
    ports:
      - 86:86
      - 446:446
      - 446:446/udp
      - 7080:7080
    restart: always
    environment:
      TZ: ${TimeZone}
    networks:
      - default
    depends_on:
      - mysql
  wordpress-init:
    image: alpine:latest
    env_file:
      - .env
    volumes:
      - ./sites:/var/www/vhosts/
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    depends_on:
      - litespeed
      - mysql
    restart: "no"
    command: >
      sh -c "
        apk add --no-cache docker-cli curl mysql-client;
        echo '=== WordPress Auto-Setup Container ===';
        echo 'Aguardando LiteSpeed ficar pronto...';
        
        # Aguardar LiteSpeed estar pronto  
        until curl -f http://litespeed:86/ >/dev/null 2>&1; do
          echo 'LiteSpeed ainda não está pronto, aguardando...';
          sleep 5;
        done;
        
        echo 'LiteSpeed está pronto!';
        echo 'Aguardando MySQL ficar pronto...';
        
        # Aguardar MySQL estar pronto
        until mysql -h mysql -u \$MYSQL_USER -p\$MYSQL_PASSWORD -e 'SELECT 1' >/dev/null 2>&1; do
          echo 'MySQL ainda não está pronto, aguardando...';
          sleep 5;
        done;
        
        echo 'MySQL está pronto!';
        
        # Verificar se domínio já existe
        if [ ! -d /var/www/vhosts/\$DOMAIN ]; then
          echo 'Configurando domínio: '\$DOMAIN;
          
          # Executar scripts no container LiteSpeed via docker exec
          docker exec litespeed bash -c 'domainctl.sh --add '\$DOMAIN;
          sleep 2;
          docker exec litespeed bash -c 'appinstallctl.sh --app wordpress --domain '\$DOMAIN;
          
          echo 'WordPress instalado com sucesso para: '\$DOMAIN;
        else
          echo 'Domínio '\$DOMAIN' já existe, pulando configuração';
        fi;
        
        echo '=== Configuração automática concluída ===';
        "
  phpmyadmin:
    image: bitnami/phpmyadmin:5.2.2
    ports:
      - 8086:8086
      - 8446:8446
    environment:
        DATABASE_HOST: mysql
    restart: always
    networks:
      - default
  redis:
    image: "redis:alpine"
    logging:
      driver: none
    # command: redis-server --requirepass 8b405f60665e48f795752e534d93b722
    volumes:
      - ./redis/data:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    restart: always
    networks:
      - default
networks:
  default:
    driver: bridge
